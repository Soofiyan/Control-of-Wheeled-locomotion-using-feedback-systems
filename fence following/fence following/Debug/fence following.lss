
fence following.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800200  00000e72  00000f06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000049  00800216  00800216  00000f1c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f4c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019d9  00000000  00000000  00001064  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000de9  00000000  00000000  00002a3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b8e  00000000  00000000  00003826  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e4  00000000  00000000  000043b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d1  00000000  00000000  00004698  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fff  00000000  00000000  00004e69  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005e68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	33 c3       	rjmp	.+1638   	; 0x740 <__vector_54>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e7       	ldi	r30, 0x72	; 114
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 31       	cpi	r26, 0x16	; 22
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e1       	ldi	r26, 0x16	; 22
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	af 35       	cpi	r26, 0x5F	; 95
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	5f d4       	rcall	.+2238   	; 0x9de <main>
 120:	a6 c6       	rjmp	.+3404   	; 0xe6e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <init_ports>:
	else if (in_var<l_limit)
	{
		in_var=l_limit;
	}
	return in_var;
}
 124:	87 b1       	in	r24, 0x07	; 7
 126:	87 6f       	ori	r24, 0xF7	; 247
 128:	87 b9       	out	0x07, r24	; 7
 12a:	88 b1       	in	r24, 0x08	; 8
 12c:	80 78       	andi	r24, 0x80	; 128
 12e:	88 b9       	out	0x08, r24	; 8
 130:	08 95       	ret

00000132 <lcd_set_4bit>:
 132:	86 e6       	ldi	r24, 0x66	; 102
 134:	9e e0       	ldi	r25, 0x0E	; 14
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <lcd_set_4bit+0x4>
 13a:	00 00       	nop
 13c:	40 98       	cbi	0x08, 0	; 8
 13e:	41 98       	cbi	0x08, 1	; 8
 140:	80 e3       	ldi	r24, 0x30	; 48
 142:	88 b9       	out	0x08, r24	; 8
 144:	42 9a       	sbi	0x08, 2	; 8
 146:	ef ef       	ldi	r30, 0xFF	; 255
 148:	f7 e4       	ldi	r31, 0x47	; 71
 14a:	31 97       	sbiw	r30, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <lcd_set_4bit+0x18>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <lcd_set_4bit+0x1e>
 150:	00 00       	nop
 152:	42 98       	cbi	0x08, 2	; 8
 154:	e6 e6       	ldi	r30, 0x66	; 102
 156:	fe e0       	ldi	r31, 0x0E	; 14
 158:	31 97       	sbiw	r30, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <lcd_set_4bit+0x26>
 15c:	00 00       	nop
 15e:	40 98       	cbi	0x08, 0	; 8
 160:	41 98       	cbi	0x08, 1	; 8
 162:	88 b9       	out	0x08, r24	; 8
 164:	42 9a       	sbi	0x08, 2	; 8
 166:	ef ef       	ldi	r30, 0xFF	; 255
 168:	f7 e4       	ldi	r31, 0x47	; 71
 16a:	31 97       	sbiw	r30, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <lcd_set_4bit+0x38>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <lcd_set_4bit+0x3e>
 170:	00 00       	nop
 172:	42 98       	cbi	0x08, 2	; 8
 174:	e6 e6       	ldi	r30, 0x66	; 102
 176:	fe e0       	ldi	r31, 0x0E	; 14
 178:	31 97       	sbiw	r30, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <lcd_set_4bit+0x46>
 17c:	00 00       	nop
 17e:	40 98       	cbi	0x08, 0	; 8
 180:	41 98       	cbi	0x08, 1	; 8
 182:	88 b9       	out	0x08, r24	; 8
 184:	42 9a       	sbi	0x08, 2	; 8
 186:	8f ef       	ldi	r24, 0xFF	; 255
 188:	97 e4       	ldi	r25, 0x47	; 71
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <lcd_set_4bit+0x58>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <lcd_set_4bit+0x5e>
 190:	00 00       	nop
 192:	42 98       	cbi	0x08, 2	; 8
 194:	e6 e6       	ldi	r30, 0x66	; 102
 196:	fe e0       	ldi	r31, 0x0E	; 14
 198:	31 97       	sbiw	r30, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <lcd_set_4bit+0x66>
 19c:	00 00       	nop
 19e:	40 98       	cbi	0x08, 0	; 8
 1a0:	41 98       	cbi	0x08, 1	; 8
 1a2:	80 e2       	ldi	r24, 0x20	; 32
 1a4:	88 b9       	out	0x08, r24	; 8
 1a6:	42 9a       	sbi	0x08, 2	; 8
 1a8:	8f ef       	ldi	r24, 0xFF	; 255
 1aa:	97 e4       	ldi	r25, 0x47	; 71
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <lcd_set_4bit+0x7a>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <lcd_set_4bit+0x80>
 1b2:	00 00       	nop
 1b4:	42 98       	cbi	0x08, 2	; 8
 1b6:	08 95       	ret

000001b8 <lcd_wr_command>:
 1b8:	98 b1       	in	r25, 0x08	; 8
 1ba:	9f 70       	andi	r25, 0x0F	; 15
 1bc:	98 b9       	out	0x08, r25	; 8
 1be:	98 b1       	in	r25, 0x08	; 8
 1c0:	28 2f       	mov	r18, r24
 1c2:	20 7f       	andi	r18, 0xF0	; 240
 1c4:	92 2b       	or	r25, r18
 1c6:	98 b9       	out	0x08, r25	; 8
 1c8:	40 98       	cbi	0x08, 0	; 8
 1ca:	41 98       	cbi	0x08, 1	; 8
 1cc:	42 9a       	sbi	0x08, 2	; 8
 1ce:	ef ef       	ldi	r30, 0xFF	; 255
 1d0:	f7 e4       	ldi	r31, 0x47	; 71
 1d2:	31 97       	sbiw	r30, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <lcd_wr_command+0x1a>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <lcd_wr_command+0x20>
 1d8:	00 00       	nop
 1da:	42 98       	cbi	0x08, 2	; 8
 1dc:	98 b1       	in	r25, 0x08	; 8
 1de:	9f 70       	andi	r25, 0x0F	; 15
 1e0:	98 b9       	out	0x08, r25	; 8
 1e2:	98 b1       	in	r25, 0x08	; 8
 1e4:	82 95       	swap	r24
 1e6:	80 7f       	andi	r24, 0xF0	; 240
 1e8:	89 2b       	or	r24, r25
 1ea:	88 b9       	out	0x08, r24	; 8
 1ec:	40 98       	cbi	0x08, 0	; 8
 1ee:	41 98       	cbi	0x08, 1	; 8
 1f0:	42 9a       	sbi	0x08, 2	; 8
 1f2:	8f ef       	ldi	r24, 0xFF	; 255
 1f4:	97 e4       	ldi	r25, 0x47	; 71
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <lcd_wr_command+0x3e>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <lcd_wr_command+0x44>
 1fc:	00 00       	nop
 1fe:	42 98       	cbi	0x08, 2	; 8
 200:	08 95       	ret

00000202 <lcd_init>:
 202:	97 df       	rcall	.-210    	; 0x132 <lcd_set_4bit>
 204:	86 e6       	ldi	r24, 0x66	; 102
 206:	9e e0       	ldi	r25, 0x0E	; 14
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <lcd_init+0x6>
 20c:	00 00       	nop
 20e:	88 e2       	ldi	r24, 0x28	; 40
 210:	d3 df       	rcall	.-90     	; 0x1b8 <lcd_wr_command>
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	d1 df       	rcall	.-94     	; 0x1b8 <lcd_wr_command>
 216:	86 e0       	ldi	r24, 0x06	; 6
 218:	cf df       	rcall	.-98     	; 0x1b8 <lcd_wr_command>
 21a:	8e e0       	ldi	r24, 0x0E	; 14
 21c:	cd df       	rcall	.-102    	; 0x1b8 <lcd_wr_command>
 21e:	80 e8       	ldi	r24, 0x80	; 128
 220:	cb cf       	rjmp	.-106    	; 0x1b8 <lcd_wr_command>
 222:	08 95       	ret

00000224 <error_distance>:
 224:	8f 92       	push	r8
 226:	9f 92       	push	r9
 228:	af 92       	push	r10
 22a:	bf 92       	push	r11
 22c:	cf 92       	push	r12
 22e:	df 92       	push	r13
 230:	ef 92       	push	r14
 232:	ff 92       	push	r15
 234:	0f 93       	push	r16
 236:	1f 93       	push	r17
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	a0 90 14 02 	lds	r10, 0x0214	; 0x800214 <target>
 240:	b0 90 15 02 	lds	r11, 0x0215	; 0x800215 <target+0x1>
 244:	00 91 4b 02 	lds	r16, 0x024B	; 0x80024b <distancef>
 248:	10 91 4c 02 	lds	r17, 0x024C	; 0x80024c <distancef+0x1>
 24c:	0a 19       	sub	r16, r10
 24e:	1b 09       	sbc	r17, r11
 250:	10 93 23 02 	sts	0x0223, r17	; 0x800223 <P1+0x1>
 254:	00 93 22 02 	sts	0x0222, r16	; 0x800222 <P1>
 258:	60 91 20 02 	lds	r22, 0x0220	; 0x800220 <I1>
 25c:	70 91 21 02 	lds	r23, 0x0221	; 0x800221 <I1+0x1>
 260:	07 2e       	mov	r0, r23
 262:	00 0c       	add	r0, r0
 264:	88 0b       	sbc	r24, r24
 266:	99 0b       	sbc	r25, r25
 268:	ff d4       	rcall	.+2558   	; 0xc68 <__floatsisf>
 26a:	6b 01       	movw	r12, r22
 26c:	7c 01       	movw	r14, r24
 26e:	b8 01       	movw	r22, r16
 270:	01 2e       	mov	r0, r17
 272:	00 0c       	add	r0, r0
 274:	88 0b       	sbc	r24, r24
 276:	99 0b       	sbc	r25, r25
 278:	f7 d4       	rcall	.+2542   	; 0xc68 <__floatsisf>
 27a:	2f e6       	ldi	r18, 0x6F	; 111
 27c:	32 e1       	ldi	r19, 0x12	; 18
 27e:	43 e0       	ldi	r20, 0x03	; 3
 280:	5a e3       	ldi	r21, 0x3A	; 58
 282:	7e d5       	rcall	.+2812   	; 0xd80 <__mulsf3>
 284:	9b 01       	movw	r18, r22
 286:	ac 01       	movw	r20, r24
 288:	c7 01       	movw	r24, r14
 28a:	b6 01       	movw	r22, r12
 28c:	56 d4       	rcall	.+2220   	; 0xb3a <__addsf3>
 28e:	b9 d4       	rcall	.+2418   	; 0xc02 <__fixsfsi>
 290:	6b 01       	movw	r12, r22
 292:	7c 01       	movw	r14, r24
 294:	70 93 21 02 	sts	0x0221, r23	; 0x800221 <I1+0x1>
 298:	60 93 20 02 	sts	0x0220, r22	; 0x800220 <I1>
 29c:	c0 91 49 02 	lds	r28, 0x0249	; 0x800249 <distanceb>
 2a0:	d0 91 4a 02 	lds	r29, 0x024A	; 0x80024a <distanceb+0x1>
 2a4:	ca 19       	sub	r28, r10
 2a6:	db 09       	sbc	r29, r11
 2a8:	d0 93 1f 02 	sts	0x021F, r29	; 0x80021f <P2+0x1>
 2ac:	c0 93 1e 02 	sts	0x021E, r28	; 0x80021e <P2>
 2b0:	60 91 1c 02 	lds	r22, 0x021C	; 0x80021c <I2>
 2b4:	70 91 1d 02 	lds	r23, 0x021D	; 0x80021d <I2+0x1>
 2b8:	07 2e       	mov	r0, r23
 2ba:	00 0c       	add	r0, r0
 2bc:	88 0b       	sbc	r24, r24
 2be:	99 0b       	sbc	r25, r25
 2c0:	d3 d4       	rcall	.+2470   	; 0xc68 <__floatsisf>
 2c2:	4b 01       	movw	r8, r22
 2c4:	5c 01       	movw	r10, r24
 2c6:	be 01       	movw	r22, r28
 2c8:	0d 2e       	mov	r0, r29
 2ca:	00 0c       	add	r0, r0
 2cc:	88 0b       	sbc	r24, r24
 2ce:	99 0b       	sbc	r25, r25
 2d0:	cb d4       	rcall	.+2454   	; 0xc68 <__floatsisf>
 2d2:	2f e6       	ldi	r18, 0x6F	; 111
 2d4:	32 e1       	ldi	r19, 0x12	; 18
 2d6:	43 e0       	ldi	r20, 0x03	; 3
 2d8:	5a e3       	ldi	r21, 0x3A	; 58
 2da:	52 d5       	rcall	.+2724   	; 0xd80 <__mulsf3>
 2dc:	9b 01       	movw	r18, r22
 2de:	ac 01       	movw	r20, r24
 2e0:	c5 01       	movw	r24, r10
 2e2:	b4 01       	movw	r22, r8
 2e4:	2a d4       	rcall	.+2132   	; 0xb3a <__addsf3>
 2e6:	8d d4       	rcall	.+2330   	; 0xc02 <__fixsfsi>
 2e8:	70 93 1d 02 	sts	0x021D, r23	; 0x80021d <I2+0x1>
 2ec:	60 93 1c 02 	sts	0x021C, r22	; 0x80021c <I2>
 2f0:	c0 0e       	add	r12, r16
 2f2:	d1 1e       	adc	r13, r17
 2f4:	d0 92 27 02 	sts	0x0227, r13	; 0x800227 <errorf+0x1>
 2f8:	c0 92 26 02 	sts	0x0226, r12	; 0x800226 <errorf>
 2fc:	c6 0f       	add	r28, r22
 2fe:	d7 1f       	adc	r29, r23
 300:	d0 93 25 02 	sts	0x0225, r29	; 0x800225 <errorb+0x1>
 304:	c0 93 24 02 	sts	0x0224, r28	; 0x800224 <errorb>
 308:	df 91       	pop	r29
 30a:	cf 91       	pop	r28
 30c:	1f 91       	pop	r17
 30e:	0f 91       	pop	r16
 310:	ff 90       	pop	r15
 312:	ef 90       	pop	r14
 314:	df 90       	pop	r13
 316:	cf 90       	pop	r12
 318:	bf 90       	pop	r11
 31a:	af 90       	pop	r10
 31c:	9f 90       	pop	r9
 31e:	8f 90       	pop	r8
 320:	08 95       	ret

00000322 <drivewheel_1>:
 322:	ef 92       	push	r14
 324:	ff 92       	push	r15
 326:	0f 93       	push	r16
 328:	1f 93       	push	r17
 32a:	e6 16       	cp	r14, r22
 32c:	f7 06       	cpc	r15, r23
 32e:	08 07       	cpc	r16, r24
 330:	19 07       	cpc	r17, r25
 332:	54 f0       	brlt	.+20     	; 0x348 <drivewheel_1+0x26>
 334:	dc 01       	movw	r26, r24
 336:	cb 01       	movw	r24, r22
 338:	82 17       	cp	r24, r18
 33a:	93 07       	cpc	r25, r19
 33c:	a4 07       	cpc	r26, r20
 33e:	b5 07       	cpc	r27, r21
 340:	2c f4       	brge	.+10     	; 0x34c <drivewheel_1+0x2a>
 342:	da 01       	movw	r26, r20
 344:	c9 01       	movw	r24, r18
 346:	02 c0       	rjmp	.+4      	; 0x34c <drivewheel_1+0x2a>
 348:	d8 01       	movw	r26, r16
 34a:	c7 01       	movw	r24, r14
 34c:	8f 3f       	cpi	r24, 0xFF	; 255
 34e:	2f ef       	ldi	r18, 0xFF	; 255
 350:	92 07       	cpc	r25, r18
 352:	a2 07       	cpc	r26, r18
 354:	b2 07       	cpc	r27, r18
 356:	54 f4       	brge	.+20     	; 0x36c <drivewheel_1+0x4a>
 358:	10 98       	cbi	0x02, 0	; 2
 35a:	11 9a       	sbi	0x02, 1	; 2
 35c:	b0 95       	com	r27
 35e:	a0 95       	com	r26
 360:	90 95       	com	r25
 362:	81 95       	neg	r24
 364:	9f 4f       	sbci	r25, 0xFF	; 255
 366:	af 4f       	sbci	r26, 0xFF	; 255
 368:	bf 4f       	sbci	r27, 0xFF	; 255
 36a:	0d c0       	rjmp	.+26     	; 0x386 <drivewheel_1+0x64>
 36c:	82 30       	cpi	r24, 0x02	; 2
 36e:	91 05       	cpc	r25, r1
 370:	a1 05       	cpc	r26, r1
 372:	b1 05       	cpc	r27, r1
 374:	1c f0       	brlt	.+6      	; 0x37c <drivewheel_1+0x5a>
 376:	11 98       	cbi	0x02, 1	; 2
 378:	10 9a       	sbi	0x02, 0	; 2
 37a:	05 c0       	rjmp	.+10     	; 0x386 <drivewheel_1+0x64>
 37c:	10 98       	cbi	0x02, 0	; 2
 37e:	11 98       	cbi	0x02, 1	; 2
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	dc 01       	movw	r26, r24
 386:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 38a:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 38e:	1f 91       	pop	r17
 390:	0f 91       	pop	r16
 392:	ff 90       	pop	r15
 394:	ef 90       	pop	r14
 396:	08 95       	ret

00000398 <drivewheel_2>:
 398:	ef 92       	push	r14
 39a:	ff 92       	push	r15
 39c:	0f 93       	push	r16
 39e:	1f 93       	push	r17
 3a0:	e6 16       	cp	r14, r22
 3a2:	f7 06       	cpc	r15, r23
 3a4:	08 07       	cpc	r16, r24
 3a6:	19 07       	cpc	r17, r25
 3a8:	54 f0       	brlt	.+20     	; 0x3be <drivewheel_2+0x26>
 3aa:	dc 01       	movw	r26, r24
 3ac:	cb 01       	movw	r24, r22
 3ae:	82 17       	cp	r24, r18
 3b0:	93 07       	cpc	r25, r19
 3b2:	a4 07       	cpc	r26, r20
 3b4:	b5 07       	cpc	r27, r21
 3b6:	2c f4       	brge	.+10     	; 0x3c2 <drivewheel_2+0x2a>
 3b8:	da 01       	movw	r26, r20
 3ba:	c9 01       	movw	r24, r18
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <drivewheel_2+0x2a>
 3be:	d8 01       	movw	r26, r16
 3c0:	c7 01       	movw	r24, r14
 3c2:	81 30       	cpi	r24, 0x01	; 1
 3c4:	2f ef       	ldi	r18, 0xFF	; 255
 3c6:	92 07       	cpc	r25, r18
 3c8:	a2 07       	cpc	r26, r18
 3ca:	b2 07       	cpc	r27, r18
 3cc:	24 f4       	brge	.+8      	; 0x3d6 <drivewheel_2+0x3e>
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	9f ef       	ldi	r25, 0xFF	; 255
 3d2:	af ef       	ldi	r26, 0xFF	; 255
 3d4:	bf ef       	ldi	r27, 0xFF	; 255
 3d6:	8f 3f       	cpi	r24, 0xFF	; 255
 3d8:	91 05       	cpc	r25, r1
 3da:	a1 05       	cpc	r26, r1
 3dc:	b1 05       	cpc	r27, r1
 3de:	29 f0       	breq	.+10     	; 0x3ea <drivewheel_2+0x52>
 3e0:	24 f0       	brlt	.+8      	; 0x3ea <drivewheel_2+0x52>
 3e2:	8f ef       	ldi	r24, 0xFF	; 255
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	a0 e0       	ldi	r26, 0x00	; 0
 3e8:	b0 e0       	ldi	r27, 0x00	; 0
 3ea:	8f 3f       	cpi	r24, 0xFF	; 255
 3ec:	2f ef       	ldi	r18, 0xFF	; 255
 3ee:	92 07       	cpc	r25, r18
 3f0:	a2 07       	cpc	r26, r18
 3f2:	b2 07       	cpc	r27, r18
 3f4:	54 f4       	brge	.+20     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f6:	12 98       	cbi	0x02, 2	; 2
 3f8:	13 9a       	sbi	0x02, 3	; 2
 3fa:	b0 95       	com	r27
 3fc:	a0 95       	com	r26
 3fe:	90 95       	com	r25
 400:	81 95       	neg	r24
 402:	9f 4f       	sbci	r25, 0xFF	; 255
 404:	af 4f       	sbci	r26, 0xFF	; 255
 406:	bf 4f       	sbci	r27, 0xFF	; 255
 408:	0d c0       	rjmp	.+26     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 40a:	82 30       	cpi	r24, 0x02	; 2
 40c:	91 05       	cpc	r25, r1
 40e:	a1 05       	cpc	r26, r1
 410:	b1 05       	cpc	r27, r1
 412:	1c f0       	brlt	.+6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 414:	13 98       	cbi	0x02, 3	; 2
 416:	12 9a       	sbi	0x02, 2	; 2
 418:	05 c0       	rjmp	.+10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 41a:	12 98       	cbi	0x02, 2	; 2
 41c:	13 98       	cbi	0x02, 3	; 2
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	dc 01       	movw	r26, r24
 424:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 428:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 42c:	1f 91       	pop	r17
 42e:	0f 91       	pop	r16
 430:	ff 90       	pop	r15
 432:	ef 90       	pop	r14
 434:	08 95       	ret

00000436 <drivewheel_3>:
 436:	ef 92       	push	r14
 438:	ff 92       	push	r15
 43a:	0f 93       	push	r16
 43c:	1f 93       	push	r17
 43e:	e6 16       	cp	r14, r22
 440:	f7 06       	cpc	r15, r23
 442:	08 07       	cpc	r16, r24
 444:	19 07       	cpc	r17, r25
 446:	54 f0       	brlt	.+20     	; 0x45c <drivewheel_3+0x26>
 448:	dc 01       	movw	r26, r24
 44a:	cb 01       	movw	r24, r22
 44c:	82 17       	cp	r24, r18
 44e:	93 07       	cpc	r25, r19
 450:	a4 07       	cpc	r26, r20
 452:	b5 07       	cpc	r27, r21
 454:	2c f4       	brge	.+10     	; 0x460 <drivewheel_3+0x2a>
 456:	da 01       	movw	r26, r20
 458:	c9 01       	movw	r24, r18
 45a:	02 c0       	rjmp	.+4      	; 0x460 <drivewheel_3+0x2a>
 45c:	d8 01       	movw	r26, r16
 45e:	c7 01       	movw	r24, r14
 460:	8f 3f       	cpi	r24, 0xFF	; 255
 462:	2f ef       	ldi	r18, 0xFF	; 255
 464:	92 07       	cpc	r25, r18
 466:	a2 07       	cpc	r26, r18
 468:	b2 07       	cpc	r27, r18
 46a:	54 f4       	brge	.+20     	; 0x480 <drivewheel_3+0x4a>
 46c:	14 98       	cbi	0x02, 4	; 2
 46e:	15 9a       	sbi	0x02, 5	; 2
 470:	b0 95       	com	r27
 472:	a0 95       	com	r26
 474:	90 95       	com	r25
 476:	81 95       	neg	r24
 478:	9f 4f       	sbci	r25, 0xFF	; 255
 47a:	af 4f       	sbci	r26, 0xFF	; 255
 47c:	bf 4f       	sbci	r27, 0xFF	; 255
 47e:	0d c0       	rjmp	.+26     	; 0x49a <drivewheel_3+0x64>
 480:	82 30       	cpi	r24, 0x02	; 2
 482:	91 05       	cpc	r25, r1
 484:	a1 05       	cpc	r26, r1
 486:	b1 05       	cpc	r27, r1
 488:	1c f0       	brlt	.+6      	; 0x490 <drivewheel_3+0x5a>
 48a:	15 98       	cbi	0x02, 5	; 2
 48c:	14 9a       	sbi	0x02, 4	; 2
 48e:	05 c0       	rjmp	.+10     	; 0x49a <drivewheel_3+0x64>
 490:	14 98       	cbi	0x02, 4	; 2
 492:	15 98       	cbi	0x02, 5	; 2
 494:	80 e0       	ldi	r24, 0x00	; 0
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	dc 01       	movw	r26, r24
 49a:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 49e:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 4a2:	1f 91       	pop	r17
 4a4:	0f 91       	pop	r16
 4a6:	ff 90       	pop	r15
 4a8:	ef 90       	pop	r14
 4aa:	08 95       	ret

000004ac <drivecross>:
 4ac:	4f 92       	push	r4
 4ae:	5f 92       	push	r5
 4b0:	6f 92       	push	r6
 4b2:	7f 92       	push	r7
 4b4:	8f 92       	push	r8
 4b6:	9f 92       	push	r9
 4b8:	af 92       	push	r10
 4ba:	bf 92       	push	r11
 4bc:	cf 92       	push	r12
 4be:	df 92       	push	r13
 4c0:	ef 92       	push	r14
 4c2:	ff 92       	push	r15
 4c4:	0f 93       	push	r16
 4c6:	1f 93       	push	r17
 4c8:	cf 93       	push	r28
 4ca:	df 93       	push	r29
 4cc:	5c 01       	movw	r10, r24
 4ce:	6b 01       	movw	r12, r22
 4d0:	49 01       	movw	r8, r18
 4d2:	ea 01       	movw	r28, r20
 4d4:	dd 23       	and	r29, r29
 4d6:	0c f4       	brge	.+2      	; 0x4da <drivecross+0x2e>
 4d8:	21 96       	adiw	r28, 0x01	; 1
 4da:	d5 95       	asr	r29
 4dc:	c7 95       	ror	r28
 4de:	be 01       	movw	r22, r28
 4e0:	6a 0d       	add	r22, r10
 4e2:	7b 1d       	adc	r23, r11
 4e4:	07 2e       	mov	r0, r23
 4e6:	00 0c       	add	r0, r0
 4e8:	88 0b       	sbc	r24, r24
 4ea:	99 0b       	sbc	r25, r25
 4ec:	bd d3       	rcall	.+1914   	; 0xc68 <__floatsisf>
 4ee:	2b 01       	movw	r4, r22
 4f0:	3c 01       	movw	r6, r24
 4f2:	b4 01       	movw	r22, r8
 4f4:	99 0c       	add	r9, r9
 4f6:	88 0b       	sbc	r24, r24
 4f8:	99 0b       	sbc	r25, r25
 4fa:	b6 d3       	rcall	.+1900   	; 0xc68 <__floatsisf>
 4fc:	26 e6       	ldi	r18, 0x66	; 102
 4fe:	36 e6       	ldi	r19, 0x66	; 102
 500:	46 ee       	ldi	r20, 0xE6	; 230
 502:	5e e3       	ldi	r21, 0x3E	; 62
 504:	3d d4       	rcall	.+2170   	; 0xd80 <__mulsf3>
 506:	9b 01       	movw	r18, r22
 508:	ac 01       	movw	r20, r24
 50a:	c3 01       	movw	r24, r6
 50c:	b2 01       	movw	r22, r4
 50e:	15 d3       	rcall	.+1578   	; 0xb3a <__addsf3>
 510:	78 d3       	rcall	.+1776   	; 0xc02 <__fixsfsi>
 512:	70 93 4e 02 	sts	0x024E, r23	; 0x80024e <x+0x1>
 516:	60 93 4d 02 	sts	0x024D, r22	; 0x80024d <x>
 51a:	b5 01       	movw	r22, r10
 51c:	bb 0c       	add	r11, r11
 51e:	88 0b       	sbc	r24, r24
 520:	99 0b       	sbc	r25, r25
 522:	a2 d3       	rcall	.+1860   	; 0xc68 <__floatsisf>
 524:	2d ec       	ldi	r18, 0xCD	; 205
 526:	3c ec       	ldi	r19, 0xCC	; 204
 528:	4c e4       	ldi	r20, 0x4C	; 76
 52a:	5f e3       	ldi	r21, 0x3F	; 63
 52c:	29 d4       	rcall	.+2130   	; 0xd80 <__mulsf3>
 52e:	4b 01       	movw	r8, r22
 530:	5c 01       	movw	r10, r24
 532:	be 01       	movw	r22, r28
 534:	6c 19       	sub	r22, r12
 536:	7d 09       	sbc	r23, r13
 538:	07 2e       	mov	r0, r23
 53a:	00 0c       	add	r0, r0
 53c:	88 0b       	sbc	r24, r24
 53e:	99 0b       	sbc	r25, r25
 540:	93 d3       	rcall	.+1830   	; 0xc68 <__floatsisf>
 542:	a5 01       	movw	r20, r10
 544:	94 01       	movw	r18, r8
 546:	f8 d2       	rcall	.+1520   	; 0xb38 <__subsf3>
 548:	2b 01       	movw	r4, r22
 54a:	3c 01       	movw	r6, r24
 54c:	b8 01       	movw	r22, r16
 54e:	11 0f       	add	r17, r17
 550:	88 0b       	sbc	r24, r24
 552:	99 0b       	sbc	r25, r25
 554:	89 d3       	rcall	.+1810   	; 0xc68 <__floatsisf>
 556:	2d ec       	ldi	r18, 0xCD	; 205
 558:	3c ec       	ldi	r19, 0xCC	; 204
 55a:	4c e4       	ldi	r20, 0x4C	; 76
 55c:	5f e3       	ldi	r21, 0x3F	; 63
 55e:	10 d4       	rcall	.+2080   	; 0xd80 <__mulsf3>
 560:	9b 01       	movw	r18, r22
 562:	ac 01       	movw	r20, r24
 564:	c3 01       	movw	r24, r6
 566:	b2 01       	movw	r22, r4
 568:	e7 d2       	rcall	.+1486   	; 0xb38 <__subsf3>
 56a:	4b d3       	rcall	.+1686   	; 0xc02 <__fixsfsi>
 56c:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <y+0x1>
 570:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <y>
 574:	cc 0d       	add	r28, r12
 576:	dd 1d       	adc	r29, r13
 578:	be 01       	movw	r22, r28
 57a:	dd 0f       	add	r29, r29
 57c:	88 0b       	sbc	r24, r24
 57e:	99 0b       	sbc	r25, r25
 580:	73 d3       	rcall	.+1766   	; 0xc68 <__floatsisf>
 582:	a5 01       	movw	r20, r10
 584:	94 01       	movw	r18, r8
 586:	d8 d2       	rcall	.+1456   	; 0xb38 <__subsf3>
 588:	4b 01       	movw	r8, r22
 58a:	5c 01       	movw	r10, r24
 58c:	b7 01       	movw	r22, r14
 58e:	ff 0c       	add	r15, r15
 590:	88 0b       	sbc	r24, r24
 592:	99 0b       	sbc	r25, r25
 594:	69 d3       	rcall	.+1746   	; 0xc68 <__floatsisf>
 596:	2d ec       	ldi	r18, 0xCD	; 205
 598:	3c ec       	ldi	r19, 0xCC	; 204
 59a:	4c e4       	ldi	r20, 0x4C	; 76
 59c:	5f e3       	ldi	r21, 0x3F	; 63
 59e:	f0 d3       	rcall	.+2016   	; 0xd80 <__mulsf3>
 5a0:	9b 01       	movw	r18, r22
 5a2:	ac 01       	movw	r20, r24
 5a4:	c5 01       	movw	r24, r10
 5a6:	b4 01       	movw	r22, r8
 5a8:	c7 d2       	rcall	.+1422   	; 0xb38 <__subsf3>
 5aa:	2b d3       	rcall	.+1622   	; 0xc02 <__fixsfsi>
 5ac:	70 93 54 02 	sts	0x0254, r23	; 0x800254 <z+0x1>
 5b0:	60 93 53 02 	sts	0x0253, r22	; 0x800253 <z>
 5b4:	07 2e       	mov	r0, r23
 5b6:	00 0c       	add	r0, r0
 5b8:	88 0b       	sbc	r24, r24
 5ba:	99 0b       	sbc	r25, r25
 5bc:	e1 2c       	mov	r14, r1
 5be:	f1 2c       	mov	r15, r1
 5c0:	87 01       	movw	r16, r14
 5c2:	ea 94       	dec	r14
 5c4:	21 e0       	ldi	r18, 0x01	; 1
 5c6:	3f ef       	ldi	r19, 0xFF	; 255
 5c8:	4f ef       	ldi	r20, 0xFF	; 255
 5ca:	5f ef       	ldi	r21, 0xFF	; 255
 5cc:	aa de       	rcall	.-684    	; 0x322 <drivewheel_1>
 5ce:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <y>
 5d2:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <y+0x1>
 5d6:	07 2e       	mov	r0, r23
 5d8:	00 0c       	add	r0, r0
 5da:	88 0b       	sbc	r24, r24
 5dc:	99 0b       	sbc	r25, r25
 5de:	21 e0       	ldi	r18, 0x01	; 1
 5e0:	3f ef       	ldi	r19, 0xFF	; 255
 5e2:	4f ef       	ldi	r20, 0xFF	; 255
 5e4:	5f ef       	ldi	r21, 0xFF	; 255
 5e6:	d8 de       	rcall	.-592    	; 0x398 <drivewheel_2>
 5e8:	60 91 4d 02 	lds	r22, 0x024D	; 0x80024d <x>
 5ec:	70 91 4e 02 	lds	r23, 0x024E	; 0x80024e <x+0x1>
 5f0:	07 2e       	mov	r0, r23
 5f2:	00 0c       	add	r0, r0
 5f4:	88 0b       	sbc	r24, r24
 5f6:	99 0b       	sbc	r25, r25
 5f8:	21 e0       	ldi	r18, 0x01	; 1
 5fa:	3f ef       	ldi	r19, 0xFF	; 255
 5fc:	4f ef       	ldi	r20, 0xFF	; 255
 5fe:	5f ef       	ldi	r21, 0xFF	; 255
 600:	1a df       	rcall	.-460    	; 0x436 <drivewheel_3>
 602:	df 91       	pop	r29
 604:	cf 91       	pop	r28
 606:	1f 91       	pop	r17
 608:	0f 91       	pop	r16
 60a:	ff 90       	pop	r15
 60c:	ef 90       	pop	r14
 60e:	df 90       	pop	r13
 610:	cf 90       	pop	r12
 612:	bf 90       	pop	r11
 614:	af 90       	pop	r10
 616:	9f 90       	pop	r9
 618:	8f 90       	pop	r8
 61a:	7f 90       	pop	r7
 61c:	6f 90       	pop	r6
 61e:	5f 90       	pop	r5
 620:	4f 90       	pop	r4
 622:	08 95       	ret

00000624 <ADC_initiate>:


void ADC_initiate()
{
	ADMUX = (0<<REFS1)|(1<<REFS0)|(0<<ADLAR);  // AVcc //  right adjusted
 624:	80 e4       	ldi	r24, 0x40	; 64
 626:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
	ADCSRA = (1<<ADEN)|(0<<ADATE)|(0<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); // bit4 ADC EOC flag // prescalar- 111 - 128 division factor
 62a:	87 e8       	ldi	r24, 0x87	; 135
 62c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
	ADCSRB = 0x00;
 630:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 634:	08 95       	ret

00000636 <ADC_read>:
}


uint16_t ADC_read(uint8_t ch)
{
	ADMUX = ADMUX & 0b11100000;    //Clearing all the mux
 636:	ec e7       	ldi	r30, 0x7C	; 124
 638:	f0 e0       	ldi	r31, 0x00	; 0
 63a:	90 81       	ld	r25, Z
 63c:	90 7e       	andi	r25, 0xE0	; 224
 63e:	90 83       	st	Z, r25
	ADCSRB = ADCSRB & 0b11110111;  //------"-"-----------
 640:	eb e7       	ldi	r30, 0x7B	; 123
 642:	f0 e0       	ldi	r31, 0x00	; 0
 644:	90 81       	ld	r25, Z
 646:	97 7f       	andi	r25, 0xF7	; 247
 648:	90 83       	st	Z, r25
	ch = ch & 0b00001111;
 64a:	98 2f       	mov	r25, r24
 64c:	9f 70       	andi	r25, 0x0F	; 15
	if ( ch <= 7 )
 64e:	98 30       	cpi	r25, 0x08	; 8
 650:	48 f4       	brcc	.+18     	; 0x664 <ADC_read+0x2e>
	{
		ch = ch & 0b00000111; //
		ADMUX = ADMUX | ch;
 652:	ec e7       	ldi	r30, 0x7C	; 124
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	90 81       	ld	r25, Z
 658:	87 70       	andi	r24, 0x07	; 7
 65a:	89 2b       	or	r24, r25
 65c:	80 83       	st	Z, r24
		ADCSRB=0x00;
 65e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 662:	0c c0       	rjmp	.+24     	; 0x67c <ADC_read+0x46>
	}
	else
	{
		ch = ch-8;
		ch = ch & 0b00000111;
		ADMUX = ADMUX | ch;
 664:	ec e7       	ldi	r30, 0x7C	; 124
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	80 81       	ld	r24, Z
 66a:	97 70       	andi	r25, 0x07	; 7
 66c:	98 2b       	or	r25, r24
 66e:	90 83       	st	Z, r25
		ADCSRB=0x00;
 670:	eb e7       	ldi	r30, 0x7B	; 123
 672:	f0 e0       	ldi	r31, 0x00	; 0
 674:	10 82       	st	Z, r1
		ADCSRB = ADCSRB | (1<<MUX5);
 676:	80 81       	ld	r24, Z
 678:	88 60       	ori	r24, 0x08	; 8
 67a:	80 83       	st	Z, r24
	}
	ADCSRA = ADCSRA | (1<<ADSC);    //Bit 6 to start conversion-ADSC
 67c:	ea e7       	ldi	r30, 0x7A	; 122
 67e:	f0 e0       	ldi	r31, 0x00	; 0
 680:	80 81       	ld	r24, Z
 682:	80 64       	ori	r24, 0x40	; 64
 684:	80 83       	st	Z, r24
	while( !(ADCSRA & (1<<ADIF)) ); // Wait for conversion to complete
 686:	80 81       	ld	r24, Z
 688:	84 ff       	sbrs	r24, 4
 68a:	fd cf       	rjmp	.-6      	; 0x686 <ADC_read+0x50>
	return(ADC);
 68c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
 690:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
}
 694:	08 95       	ret

00000696 <distance_values>:
	OCR4C=sp_vect;
}


void distance_values()
{
 696:	cf 93       	push	r28
 698:	df 93       	push	r29
	uint16_t d = ADC_read(0);
 69a:	80 e0       	ldi	r24, 0x00	; 0
 69c:	cc df       	rcall	.-104    	; 0x636 <ADC_read>
    distancef = (6762/(d-9))-4;
 69e:	bc 01       	movw	r22, r24
 6a0:	69 50       	subi	r22, 0x09	; 9
 6a2:	71 09       	sbc	r23, r1
 6a4:	ca e6       	ldi	r28, 0x6A	; 106
 6a6:	da e1       	ldi	r29, 0x1A	; 26
 6a8:	ce 01       	movw	r24, r28
 6aa:	cd d3       	rcall	.+1946   	; 0xe46 <__udivmodhi4>
 6ac:	64 50       	subi	r22, 0x04	; 4
 6ae:	71 09       	sbc	r23, r1
 6b0:	70 93 4c 02 	sts	0x024C, r23	; 0x80024c <distancef+0x1>
 6b4:	60 93 4b 02 	sts	0x024B, r22	; 0x80024b <distancef>
	d = ADC_read(1);
 6b8:	81 e0       	ldi	r24, 0x01	; 1
 6ba:	bd df       	rcall	.-134    	; 0x636 <ADC_read>
 6bc:	bc 01       	movw	r22, r24
	distanceb = (6762/(d-9))-4;	
 6be:	69 50       	subi	r22, 0x09	; 9
 6c0:	71 09       	sbc	r23, r1
 6c2:	ce 01       	movw	r24, r28
 6c4:	c0 d3       	rcall	.+1920   	; 0xe46 <__udivmodhi4>
 6c6:	64 50       	subi	r22, 0x04	; 4
 6c8:	71 09       	sbc	r23, r1
 6ca:	70 93 4a 02 	sts	0x024A, r23	; 0x80024a <distanceb+0x1>
 6ce:	60 93 49 02 	sts	0x0249, r22	; 0x800249 <distanceb>
 6d2:	df 91       	pop	r29
}
 6d4:	cf 91       	pop	r28
 6d6:	08 95       	ret

000006d8 <init_ports1>:
 6d8:	10 ba       	out	0x10, r1	; 16


void init_ports1()
{
	DDRF = 0x00;
    DDRH = 0xFF;
 6da:	8f ef       	ldi	r24, 0xFF	; 255
 6dc:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
	PORTH = 0xFF;
 6e0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
	DDRA = 0xFF;
 6e4:	81 b9       	out	0x01, r24	; 1
 6e6:	08 95       	ret

000006e8 <receive>:
}


void receive()
{
	if ((RX_raw>200) && (RX_raw<255))
 6e8:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <RX_raw>
 6ec:	20 91 13 02 	lds	r18, 0x0213	; 0x800213 <RX_raw+0x1>
 6f0:	8e 2f       	mov	r24, r30
 6f2:	92 2f       	mov	r25, r18
 6f4:	ac 01       	movw	r20, r24
 6f6:	49 5c       	subi	r20, 0xC9	; 201
 6f8:	51 09       	sbc	r21, r1
 6fa:	46 33       	cpi	r20, 0x36	; 54
 6fc:	51 05       	cpc	r21, r1
 6fe:	98 f4       	brcc	.+38     	; 0x726 <receive+0x3e>
	{
		RX_ad1=RX_raw;
 700:	e0 93 10 02 	sts	0x0210, r30	; 0x800210 <RX_ad1>
 704:	20 93 11 02 	sts	0x0211, r18	; 0x800211 <RX_ad1+0x1>
		if ((RX_raw>230) && (RX_raw<247))
 708:	87 5e       	subi	r24, 0xE7	; 231
 70a:	91 09       	sbc	r25, r1
 70c:	40 97       	sbiw	r24, 0x10	; 16
 70e:	b8 f4       	brcc	.+46     	; 0x73e <receive+0x56>
		{
			uint8_t r_temp0=(RX_raw-231);
			butt[r_temp0]=1;
 710:	e7 5e       	subi	r30, 0xE7	; 231
 712:	f0 e0       	ldi	r31, 0x00	; 0
 714:	ee 0f       	add	r30, r30
 716:	ff 1f       	adc	r31, r31
 718:	e7 5d       	subi	r30, 0xD7	; 215
 71a:	fd 4f       	sbci	r31, 0xFD	; 253
 71c:	81 e0       	ldi	r24, 0x01	; 1
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	91 83       	std	Z+1, r25	; 0x01
 722:	80 83       	st	Z, r24
 724:	08 95       	ret
		}
	}
	else if ((RX_raw>=0) && (RX_raw<201))
 726:	89 3c       	cpi	r24, 0xC9	; 201
 728:	91 05       	cpc	r25, r1
 72a:	48 f4       	brcc	.+18     	; 0x73e <receive+0x56>
	{
		uint8_t r_temp1=(RX_ad1-201);
 72c:	a0 91 10 02 	lds	r26, 0x0210	; 0x800210 <RX_ad1>
 730:	a9 5c       	subi	r26, 0xC9	; 201
		if (r_temp1<16)
 732:	a0 31       	cpi	r26, 0x10	; 16
 734:	20 f4       	brcc	.+8      	; 0x73e <receive+0x56>
		{
			RX[r_temp1]=RX_raw;
 736:	b0 e0       	ldi	r27, 0x00	; 0
 738:	a0 50       	subi	r26, 0x00	; 0
 73a:	be 4f       	sbci	r27, 0xFE	; 254
 73c:	ec 93       	st	X, r30
 73e:	08 95       	ret

00000740 <__vector_54>:
		}
	}
}
ISR(USART3_RX_vect)
{
 740:	1f 92       	push	r1
 742:	0f 92       	push	r0
 744:	0f b6       	in	r0, 0x3f	; 63
 746:	0f 92       	push	r0
 748:	11 24       	eor	r1, r1
 74a:	0b b6       	in	r0, 0x3b	; 59
 74c:	0f 92       	push	r0
 74e:	2f 93       	push	r18
 750:	3f 93       	push	r19
 752:	4f 93       	push	r20
 754:	5f 93       	push	r21
 756:	6f 93       	push	r22
 758:	7f 93       	push	r23
 75a:	8f 93       	push	r24
 75c:	9f 93       	push	r25
 75e:	af 93       	push	r26
 760:	bf 93       	push	r27
 762:	ef 93       	push	r30
 764:	ff 93       	push	r31
	RX_raw=UDR3;
 766:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <RX_raw+0x1>
 770:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <RX_raw>
	receive();
 774:	b9 df       	rcall	.-142    	; 0x6e8 <receive>
}
 776:	ff 91       	pop	r31
 778:	ef 91       	pop	r30
 77a:	bf 91       	pop	r27
 77c:	af 91       	pop	r26
 77e:	9f 91       	pop	r25
 780:	8f 91       	pop	r24
 782:	7f 91       	pop	r23
 784:	6f 91       	pop	r22
 786:	5f 91       	pop	r21
 788:	4f 91       	pop	r20
 78a:	3f 91       	pop	r19
 78c:	2f 91       	pop	r18
 78e:	0f 90       	pop	r0
 790:	0b be       	out	0x3b, r0	; 59
 792:	0f 90       	pop	r0
 794:	0f be       	out	0x3f, r0	; 63
 796:	0f 90       	pop	r0
 798:	1f 90       	pop	r1
 79a:	18 95       	reti

0000079c <usart_init>:
void usart_init()
{
	UBRR3H=BAUDRATE>>8;
 79c:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <__TEXT_REGION_LENGTH__+0x700135>
	UBRR3L=BAUDRATE;
 7a0:	8f e5       	ldi	r24, 0x5F	; 95
 7a2:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x700134>
	UCSR3B=0b10011000;//enable RXEN TXEN
 7a6:	88 e9       	ldi	r24, 0x98	; 152
 7a8:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x700131>
	UCSR3C=0b00000110;// UCSZ1 UCSZ0
 7ac:	86 e0       	ldi	r24, 0x06	; 6
 7ae:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x700132>
	DDRJ = 0xFF;
 7b2:	8f ef       	ldi	r24, 0xFF	; 255
 7b4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
	PORTJ = 0xFF;
 7b8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 7bc:	08 95       	ret

000007be <ps2_values>:
}

void ps2_values()
{
	if (butt[0]==1)//l1
 7be:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <butt>
 7c2:	90 91 2a 02 	lds	r25, 0x022A	; 0x80022a <butt+0x1>
 7c6:	01 97       	sbiw	r24, 0x01	; 1
 7c8:	59 f4       	brne	.+22     	; 0x7e0 <ps2_values+0x22>
	{
		on ^= 1;
 7ca:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 7ce:	81 e0       	ldi	r24, 0x01	; 1
 7d0:	89 27       	eor	r24, r25
 7d2:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[0]=0;
 7d6:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <butt+0x1>
 7da:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <butt>
 7de:	08 95       	ret
	}
	else if (butt[1]==1)//r1
 7e0:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <butt+0x2>
 7e4:	90 91 2c 02 	lds	r25, 0x022C	; 0x80022c <butt+0x3>
 7e8:	01 97       	sbiw	r24, 0x01	; 1
 7ea:	59 f4       	brne	.+22     	; 0x802 <ps2_values+0x44>
	{
		on ^= 1;
 7ec:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 7f0:	81 e0       	ldi	r24, 0x01	; 1
 7f2:	89 27       	eor	r24, r25
 7f4:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[1]=0;
 7f8:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <butt+0x3>
 7fc:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <butt+0x2>
 800:	08 95       	ret
	}
	else if (butt[2]==1)//l2
 802:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <butt+0x4>
 806:	90 91 2e 02 	lds	r25, 0x022E	; 0x80022e <butt+0x5>
 80a:	01 97       	sbiw	r24, 0x01	; 1
 80c:	59 f4       	brne	.+22     	; 0x824 <ps2_values+0x66>
	{
		on ^= 1;
 80e:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 812:	81 e0       	ldi	r24, 0x01	; 1
 814:	89 27       	eor	r24, r25
 816:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[2]=0;
 81a:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <butt+0x5>
 81e:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <butt+0x4>
 822:	08 95       	ret
	}
	else if (butt[3]==1)//r2
 824:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <butt+0x6>
 828:	90 91 30 02 	lds	r25, 0x0230	; 0x800230 <butt+0x7>
 82c:	01 97       	sbiw	r24, 0x01	; 1
 82e:	59 f4       	brne	.+22     	; 0x846 <ps2_values+0x88>
	{
		on ^= 1;
 830:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 834:	81 e0       	ldi	r24, 0x01	; 1
 836:	89 27       	eor	r24, r25
 838:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[3]=0;
 83c:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <butt+0x7>
 840:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <butt+0x6>
 844:	08 95       	ret
	}
	else if (butt[4]==1)//l3
 846:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <butt+0x8>
 84a:	90 91 32 02 	lds	r25, 0x0232	; 0x800232 <butt+0x9>
 84e:	01 97       	sbiw	r24, 0x01	; 1
 850:	59 f4       	brne	.+22     	; 0x868 <ps2_values+0xaa>
	{
		on ^= 1;
 852:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 856:	81 e0       	ldi	r24, 0x01	; 1
 858:	89 27       	eor	r24, r25
 85a:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[4]=0;
 85e:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <butt+0x9>
 862:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <butt+0x8>
 866:	08 95       	ret
	}
	else if (butt[5]==1)//r3
 868:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <butt+0xa>
 86c:	90 91 34 02 	lds	r25, 0x0234	; 0x800234 <butt+0xb>
 870:	01 97       	sbiw	r24, 0x01	; 1
 872:	59 f4       	brne	.+22     	; 0x88a <ps2_values+0xcc>
	{
		on ^= 1;
 874:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 878:	81 e0       	ldi	r24, 0x01	; 1
 87a:	89 27       	eor	r24, r25
 87c:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[5]=0;
 880:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <butt+0xb>
 884:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <butt+0xa>
 888:	08 95       	ret
	}
	else if (butt[6]==1)//triangle
 88a:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <butt+0xc>
 88e:	90 91 36 02 	lds	r25, 0x0236	; 0x800236 <butt+0xd>
 892:	01 97       	sbiw	r24, 0x01	; 1
 894:	59 f4       	brne	.+22     	; 0x8ac <ps2_values+0xee>
	{
		on ^= 1;
 896:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 89a:	81 e0       	ldi	r24, 0x01	; 1
 89c:	89 27       	eor	r24, r25
 89e:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[6]=0;
 8a2:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <butt+0xd>
 8a6:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <butt+0xc>
 8aa:	08 95       	ret
	}
	else if (butt[7]==1)//square
 8ac:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <butt+0xe>
 8b0:	90 91 38 02 	lds	r25, 0x0238	; 0x800238 <butt+0xf>
 8b4:	01 97       	sbiw	r24, 0x01	; 1
 8b6:	59 f4       	brne	.+22     	; 0x8ce <ps2_values+0x110>
	{
		on ^= 1;
 8b8:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 8bc:	81 e0       	ldi	r24, 0x01	; 1
 8be:	89 27       	eor	r24, r25
 8c0:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[7]=0;
 8c4:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <butt+0xf>
 8c8:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <butt+0xe>
 8cc:	08 95       	ret
	}
	else if (butt[8]==1)//cross
 8ce:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <butt+0x10>
 8d2:	90 91 3a 02 	lds	r25, 0x023A	; 0x80023a <butt+0x11>
 8d6:	01 97       	sbiw	r24, 0x01	; 1
 8d8:	59 f4       	brne	.+22     	; 0x8f0 <ps2_values+0x132>
	{
		on ^= 1;
 8da:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 8de:	81 e0       	ldi	r24, 0x01	; 1
 8e0:	89 27       	eor	r24, r25
 8e2:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[8] = 0;
 8e6:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <butt+0x11>
 8ea:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <butt+0x10>
 8ee:	08 95       	ret
	}
	else if (butt[9]==1)//circle
 8f0:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <butt+0x12>
 8f4:	90 91 3c 02 	lds	r25, 0x023C	; 0x80023c <butt+0x13>
 8f8:	01 97       	sbiw	r24, 0x01	; 1
 8fa:	59 f4       	brne	.+22     	; 0x912 <ps2_values+0x154>
	{
		on ^= 1;
 8fc:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 900:	81 e0       	ldi	r24, 0x01	; 1
 902:	89 27       	eor	r24, r25
 904:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[9]=0;
 908:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <butt+0x13>
 90c:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <butt+0x12>
 910:	08 95       	ret
	}
	else if (butt[10]==1)//up
 912:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <butt+0x14>
 916:	90 91 3e 02 	lds	r25, 0x023E	; 0x80023e <butt+0x15>
 91a:	01 97       	sbiw	r24, 0x01	; 1
 91c:	59 f4       	brne	.+22     	; 0x934 <ps2_values+0x176>
	{
		on ^= 1;
 91e:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 922:	81 e0       	ldi	r24, 0x01	; 1
 924:	89 27       	eor	r24, r25
 926:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[10]=0;
 92a:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <butt+0x15>
 92e:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <butt+0x14>
 932:	08 95       	ret
	}
	else if (butt[11]==1)//left
 934:	80 91 3f 02 	lds	r24, 0x023F	; 0x80023f <butt+0x16>
 938:	90 91 40 02 	lds	r25, 0x0240	; 0x800240 <butt+0x17>
 93c:	01 97       	sbiw	r24, 0x01	; 1
 93e:	59 f4       	brne	.+22     	; 0x956 <ps2_values+0x198>
	{
		on ^= 1;
 940:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 944:	81 e0       	ldi	r24, 0x01	; 1
 946:	89 27       	eor	r24, r25
 948:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[11]=0;
 94c:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <butt+0x17>
 950:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <butt+0x16>
 954:	08 95       	ret
	}
	else if (butt[12]==1)//down
 956:	80 91 41 02 	lds	r24, 0x0241	; 0x800241 <butt+0x18>
 95a:	90 91 42 02 	lds	r25, 0x0242	; 0x800242 <butt+0x19>
 95e:	01 97       	sbiw	r24, 0x01	; 1
 960:	59 f4       	brne	.+22     	; 0x978 <ps2_values+0x1ba>
	{
		on ^= 1;
 962:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 966:	81 e0       	ldi	r24, 0x01	; 1
 968:	89 27       	eor	r24, r25
 96a:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[12] = 0;
 96e:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <butt+0x19>
 972:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <butt+0x18>
 976:	08 95       	ret
	}
	else if (butt[13]==1)//right
 978:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <butt+0x1a>
 97c:	90 91 44 02 	lds	r25, 0x0244	; 0x800244 <butt+0x1b>
 980:	01 97       	sbiw	r24, 0x01	; 1
 982:	59 f4       	brne	.+22     	; 0x99a <ps2_values+0x1dc>
	{
		on ^= 1;
 984:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 988:	81 e0       	ldi	r24, 0x01	; 1
 98a:	89 27       	eor	r24, r25
 98c:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[13]=0;
 990:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <butt+0x1b>
 994:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <butt+0x1a>
 998:	08 95       	ret
	}
	else if (butt[14]==1)//start
 99a:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <butt+0x1c>
 99e:	90 91 46 02 	lds	r25, 0x0246	; 0x800246 <butt+0x1d>
 9a2:	01 97       	sbiw	r24, 0x01	; 1
 9a4:	59 f4       	brne	.+22     	; 0x9bc <ps2_values+0x1fe>
	{
		on ^= 1;
 9a6:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 9aa:	81 e0       	ldi	r24, 0x01	; 1
 9ac:	89 27       	eor	r24, r25
 9ae:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[14]=0;
 9b2:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <butt+0x1d>
 9b6:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <butt+0x1c>
 9ba:	08 95       	ret
	}
	else if (butt[15]==1)//select
 9bc:	80 91 47 02 	lds	r24, 0x0247	; 0x800247 <butt+0x1e>
 9c0:	90 91 48 02 	lds	r25, 0x0248	; 0x800248 <butt+0x1f>
 9c4:	01 97       	sbiw	r24, 0x01	; 1
 9c6:	51 f4       	brne	.+20     	; 0x9dc <ps2_values+0x21e>
	{
		on ^= 1;
 9c8:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <on>
 9cc:	81 e0       	ldi	r24, 0x01	; 1
 9ce:	89 27       	eor	r24, r25
 9d0:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on>
		butt[15] = 0;
 9d4:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <butt+0x1f>
 9d8:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <butt+0x1e>
 9dc:	08 95       	ret

000009de <main>:


int main(void)
{
    
	init_ports1();
 9de:	7c de       	rcall	.-776    	; 0x6d8 <init_ports1>
	ADC_initiate();
 9e0:	21 de       	rcall	.-958    	; 0x624 <ADC_initiate>
	init_ports();
 9e2:	a0 db       	rcall	.-2240   	; 0x124 <init_ports>
	lcd_init();
 9e4:	0e dc       	rcall	.-2020   	; 0x202 <lcd_init>
 9e6:	da de       	rcall	.-588    	; 0x79c <usart_init>
	usart_init();
 9e8:	e0 ea       	ldi	r30, 0xA0	; 160
 9ea:	f0 e0       	ldi	r31, 0x00	; 0
	TCCR4A |= (1<<COM4A1)|(1<<COM4B1)|(1<<COM4C1)|(1<<WGM40);
 9ec:	80 81       	ld	r24, Z
 9ee:	89 6a       	ori	r24, 0xA9	; 169
 9f0:	80 83       	st	Z, r24
 9f2:	e1 ea       	ldi	r30, 0xA1	; 161
 9f4:	f0 e0       	ldi	r31, 0x00	; 0
	TCCR4B |= (1<<WGM42)|(1<<CS41)|(1<<CS40);
 9f6:	80 81       	ld	r24, Z
 9f8:	8b 60       	ori	r24, 0x0B	; 11
 9fa:	80 83       	st	Z, r24
	sei();
 9fc:	78 94       	sei
	
	
    while (1) 
    {
		distance_values();
 9fe:	4b de       	rcall	.-874    	; 0x696 <distance_values>
 a00:	11 dc       	rcall	.-2014   	; 0x224 <error_distance>
		error_distance();
 a02:	dd de       	rcall	.-582    	; 0x7be <ps2_values>
 a04:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <on>
		ps2_values();
 a08:	81 30       	cpi	r24, 0x01	; 1
// 		lcd_print(1,1,distancef,4);
// 		lcd_print(1,6,distanceb,4);
// 		lcd_print(2,1,(distancef - target),5);
// 		lcd_print(2,6,(distanceb - target),5);
		if(on == 1)
 a0a:	09 f0       	breq	.+2      	; 0xa0e <main+0x30>
 a0c:	7c c0       	rjmp	.+248    	; 0xb06 <main+0x128>
 a0e:	20 91 4b 02 	lds	r18, 0x024B	; 0x80024b <distancef>
 a12:	30 91 4c 02 	lds	r19, 0x024C	; 0x80024c <distancef+0x1>
		{
			if((distancef > target && distanceb < target) || (distancef < target && distanceb > target))  //1
 a16:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <target>
 a1a:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <target+0x1>
 a1e:	82 17       	cp	r24, r18
 a20:	93 07       	cpc	r25, r19
 a22:	0c f0       	brlt	.+2      	; 0xa26 <main+0x48>
 a24:	7f c0       	rjmp	.+254    	; 0xb24 <main+0x146>
 a26:	40 91 49 02 	lds	r20, 0x0249	; 0x800249 <distanceb>
 a2a:	50 91 4a 02 	lds	r21, 0x024A	; 0x80024a <distanceb+0x1>
 a2e:	48 17       	cp	r20, r24
 a30:	59 07       	cpc	r21, r25
 a32:	44 f0       	brlt	.+16     	; 0xa44 <main+0x66>
 a34:	7c c0       	rjmp	.+248    	; 0xb2e <main+0x150>
 a36:	20 91 49 02 	lds	r18, 0x0249	; 0x800249 <distanceb>
 a3a:	30 91 4a 02 	lds	r19, 0x024A	; 0x80024a <distanceb+0x1>
 a3e:	82 17       	cp	r24, r18
 a40:	93 07       	cpc	r25, r19
 a42:	fc f4       	brge	.+62     	; 0xa82 <main+0xa4>
 a44:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <errorb>
 a48:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <errorb+0x1>
			{
				error1 = -errorf + errorb;
 a4c:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <errorf>
 a50:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <errorf+0x1>
 a54:	ac 01       	movw	r20, r24
 a56:	42 1b       	sub	r20, r18
 a58:	53 0b       	sbc	r21, r19
 a5a:	50 93 1b 02 	sts	0x021B, r21	; 0x80021b <error1+0x1>
 a5e:	40 93 1a 02 	sts	0x021A, r20	; 0x80021a <error1>
 a62:	22 0f       	add	r18, r18
 a64:	33 1f       	adc	r19, r19
 a66:	30 93 19 02 	sts	0x0219, r19	; 0x800219 <error2+0x1>
				error2 = errorf*2;
 a6a:	20 93 18 02 	sts	0x0218, r18	; 0x800218 <error2>
 a6e:	91 95       	neg	r25
 a70:	81 95       	neg	r24
 a72:	91 09       	sbc	r25, r1
				error3 = -errorb*2;
 a74:	88 0f       	add	r24, r24
 a76:	99 1f       	adc	r25, r25
 a78:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <__data_end+0x1>
 a7c:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <__data_end>
 a80:	2e c0       	rjmp	.+92     	; 0xade <main+0x100>
 a82:	28 17       	cp	r18, r24
 a84:	39 07       	cpc	r19, r25
 a86:	44 f0       	brlt	.+16     	; 0xa98 <main+0xba>
			}
			else if((distancef < target && distanceb < target) || (distancef > target && distanceb > target))  //1
 a88:	2a c0       	rjmp	.+84     	; 0xade <main+0x100>
 a8a:	20 91 49 02 	lds	r18, 0x0249	; 0x800249 <distanceb>
 a8e:	30 91 4a 02 	lds	r19, 0x024A	; 0x80024a <distanceb+0x1>
 a92:	82 17       	cp	r24, r18
 a94:	93 07       	cpc	r25, r19
 a96:	1c f5       	brge	.+70     	; 0xade <main+0x100>
 a98:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <errorf>
 a9c:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <errorf+0x1>
			{
				error1 = (errorf + errorb);
 aa0:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <errorb>
 aa4:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <errorb+0x1>
 aa8:	c9 01       	movw	r24, r18
 aaa:	84 0f       	add	r24, r20
 aac:	95 1f       	adc	r25, r21
 aae:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <error1+0x1>
 ab2:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <error1>
 ab6:	80 e0       	ldi	r24, 0x00	; 0
 ab8:	90 e0       	ldi	r25, 0x00	; 0
 aba:	bc 01       	movw	r22, r24
				error2 = -errorf*2;
 abc:	62 1b       	sub	r22, r18
 abe:	73 0b       	sbc	r23, r19
 ac0:	9b 01       	movw	r18, r22
 ac2:	22 0f       	add	r18, r18
 ac4:	33 1f       	adc	r19, r19
 ac6:	30 93 19 02 	sts	0x0219, r19	; 0x800219 <error2+0x1>
 aca:	20 93 18 02 	sts	0x0218, r18	; 0x800218 <error2>
 ace:	84 1b       	sub	r24, r20
 ad0:	95 0b       	sbc	r25, r21
 ad2:	88 0f       	add	r24, r24
				error3 = -errorb*2;
 ad4:	99 1f       	adc	r25, r25
 ad6:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <__data_end+0x1>
 ada:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <__data_end>
 ade:	e0 90 16 02 	lds	r14, 0x0216	; 0x800216 <__data_end>
 ae2:	f0 90 17 02 	lds	r15, 0x0217	; 0x800217 <__data_end+0x1>
			}
            drivecross(200,0,0,error1,error2,error3);
 ae6:	00 91 18 02 	lds	r16, 0x0218	; 0x800218 <error2>
 aea:	10 91 19 02 	lds	r17, 0x0219	; 0x800219 <error2+0x1>
 aee:	20 91 1a 02 	lds	r18, 0x021A	; 0x80021a <error1>
 af2:	30 91 1b 02 	lds	r19, 0x021B	; 0x80021b <error1+0x1>
 af6:	40 e0       	ldi	r20, 0x00	; 0
 af8:	50 e0       	ldi	r21, 0x00	; 0
 afa:	60 e0       	ldi	r22, 0x00	; 0
 afc:	70 e0       	ldi	r23, 0x00	; 0
 afe:	88 ec       	ldi	r24, 0xC8	; 200
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	d4 dc       	rcall	.-1624   	; 0x4ac <drivecross>
 b04:	7c cf       	rjmp	.-264    	; 0x9fe <main+0x20>
 b06:	e1 2c       	mov	r14, r1
 b08:	f1 2c       	mov	r15, r1
 b0a:	00 e0       	ldi	r16, 0x00	; 0
		}
		else
		{
			drivecross(0,0,0,0,0,0);
 b0c:	10 e0       	ldi	r17, 0x00	; 0
 b0e:	20 e0       	ldi	r18, 0x00	; 0
 b10:	30 e0       	ldi	r19, 0x00	; 0
 b12:	40 e0       	ldi	r20, 0x00	; 0
 b14:	50 e0       	ldi	r21, 0x00	; 0
 b16:	60 e0       	ldi	r22, 0x00	; 0
 b18:	70 e0       	ldi	r23, 0x00	; 0
 b1a:	80 e0       	ldi	r24, 0x00	; 0
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	c6 dc       	rcall	.-1652   	; 0x4ac <drivecross>
 b20:	12 b8       	out	0x02, r1	; 2
 b22:	6d cf       	rjmp	.-294    	; 0x9fe <main+0x20>
 b24:	28 17       	cp	r18, r24
			PORTA = 0x00;
 b26:	39 07       	cpc	r19, r25
 b28:	0c f4       	brge	.+2      	; 0xb2c <main+0x14e>
// 		lcd_print(1,6,distanceb,4);
// 		lcd_print(2,1,(distancef - target),5);
// 		lcd_print(2,6,(distanceb - target),5);
		if(on == 1)
		{
			if((distancef > target && distanceb < target) || (distancef < target && distanceb > target))  //1
 b2a:	85 cf       	rjmp	.-246    	; 0xa36 <main+0x58>
 b2c:	d8 cf       	rjmp	.-80     	; 0xade <main+0x100>
 b2e:	28 17       	cp	r18, r24
 b30:	39 07       	cpc	r19, r25
 b32:	0c f0       	brlt	.+2      	; 0xb36 <main+0x158>
 b34:	aa cf       	rjmp	.-172    	; 0xa8a <main+0xac>
 b36:	7f cf       	rjmp	.-258    	; 0xa36 <main+0x58>

00000b38 <__subsf3>:
 b38:	50 58       	subi	r21, 0x80	; 128

00000b3a <__addsf3>:
 b3a:	bb 27       	eor	r27, r27
 b3c:	aa 27       	eor	r26, r26
 b3e:	0e d0       	rcall	.+28     	; 0xb5c <__addsf3x>
 b40:	e5 c0       	rjmp	.+458    	; 0xd0c <__fp_round>
 b42:	d6 d0       	rcall	.+428    	; 0xcf0 <__fp_pscA>
 b44:	30 f0       	brcs	.+12     	; 0xb52 <__addsf3+0x18>
 b46:	db d0       	rcall	.+438    	; 0xcfe <__fp_pscB>
 b48:	20 f0       	brcs	.+8      	; 0xb52 <__addsf3+0x18>
 b4a:	31 f4       	brne	.+12     	; 0xb58 <__addsf3+0x1e>
 b4c:	9f 3f       	cpi	r25, 0xFF	; 255
 b4e:	11 f4       	brne	.+4      	; 0xb54 <__addsf3+0x1a>
 b50:	1e f4       	brtc	.+6      	; 0xb58 <__addsf3+0x1e>
 b52:	cb c0       	rjmp	.+406    	; 0xcea <__fp_nan>
 b54:	0e f4       	brtc	.+2      	; 0xb58 <__addsf3+0x1e>
 b56:	e0 95       	com	r30
 b58:	e7 fb       	bst	r30, 7
 b5a:	c1 c0       	rjmp	.+386    	; 0xcde <__fp_inf>

00000b5c <__addsf3x>:
 b5c:	e9 2f       	mov	r30, r25
 b5e:	e7 d0       	rcall	.+462    	; 0xd2e <__fp_split3>
 b60:	80 f3       	brcs	.-32     	; 0xb42 <__addsf3+0x8>
 b62:	ba 17       	cp	r27, r26
 b64:	62 07       	cpc	r22, r18
 b66:	73 07       	cpc	r23, r19
 b68:	84 07       	cpc	r24, r20
 b6a:	95 07       	cpc	r25, r21
 b6c:	18 f0       	brcs	.+6      	; 0xb74 <__addsf3x+0x18>
 b6e:	71 f4       	brne	.+28     	; 0xb8c <__addsf3x+0x30>
 b70:	9e f5       	brtc	.+102    	; 0xbd8 <__addsf3x+0x7c>
 b72:	ff c0       	rjmp	.+510    	; 0xd72 <__fp_zero>
 b74:	0e f4       	brtc	.+2      	; 0xb78 <__addsf3x+0x1c>
 b76:	e0 95       	com	r30
 b78:	0b 2e       	mov	r0, r27
 b7a:	ba 2f       	mov	r27, r26
 b7c:	a0 2d       	mov	r26, r0
 b7e:	0b 01       	movw	r0, r22
 b80:	b9 01       	movw	r22, r18
 b82:	90 01       	movw	r18, r0
 b84:	0c 01       	movw	r0, r24
 b86:	ca 01       	movw	r24, r20
 b88:	a0 01       	movw	r20, r0
 b8a:	11 24       	eor	r1, r1
 b8c:	ff 27       	eor	r31, r31
 b8e:	59 1b       	sub	r21, r25
 b90:	99 f0       	breq	.+38     	; 0xbb8 <__addsf3x+0x5c>
 b92:	59 3f       	cpi	r21, 0xF9	; 249
 b94:	50 f4       	brcc	.+20     	; 0xbaa <__addsf3x+0x4e>
 b96:	50 3e       	cpi	r21, 0xE0	; 224
 b98:	68 f1       	brcs	.+90     	; 0xbf4 <__addsf3x+0x98>
 b9a:	1a 16       	cp	r1, r26
 b9c:	f0 40       	sbci	r31, 0x00	; 0
 b9e:	a2 2f       	mov	r26, r18
 ba0:	23 2f       	mov	r18, r19
 ba2:	34 2f       	mov	r19, r20
 ba4:	44 27       	eor	r20, r20
 ba6:	58 5f       	subi	r21, 0xF8	; 248
 ba8:	f3 cf       	rjmp	.-26     	; 0xb90 <__addsf3x+0x34>
 baa:	46 95       	lsr	r20
 bac:	37 95       	ror	r19
 bae:	27 95       	ror	r18
 bb0:	a7 95       	ror	r26
 bb2:	f0 40       	sbci	r31, 0x00	; 0
 bb4:	53 95       	inc	r21
 bb6:	c9 f7       	brne	.-14     	; 0xbaa <__addsf3x+0x4e>
 bb8:	7e f4       	brtc	.+30     	; 0xbd8 <__addsf3x+0x7c>
 bba:	1f 16       	cp	r1, r31
 bbc:	ba 0b       	sbc	r27, r26
 bbe:	62 0b       	sbc	r22, r18
 bc0:	73 0b       	sbc	r23, r19
 bc2:	84 0b       	sbc	r24, r20
 bc4:	ba f0       	brmi	.+46     	; 0xbf4 <__addsf3x+0x98>
 bc6:	91 50       	subi	r25, 0x01	; 1
 bc8:	a1 f0       	breq	.+40     	; 0xbf2 <__addsf3x+0x96>
 bca:	ff 0f       	add	r31, r31
 bcc:	bb 1f       	adc	r27, r27
 bce:	66 1f       	adc	r22, r22
 bd0:	77 1f       	adc	r23, r23
 bd2:	88 1f       	adc	r24, r24
 bd4:	c2 f7       	brpl	.-16     	; 0xbc6 <__addsf3x+0x6a>
 bd6:	0e c0       	rjmp	.+28     	; 0xbf4 <__addsf3x+0x98>
 bd8:	ba 0f       	add	r27, r26
 bda:	62 1f       	adc	r22, r18
 bdc:	73 1f       	adc	r23, r19
 bde:	84 1f       	adc	r24, r20
 be0:	48 f4       	brcc	.+18     	; 0xbf4 <__addsf3x+0x98>
 be2:	87 95       	ror	r24
 be4:	77 95       	ror	r23
 be6:	67 95       	ror	r22
 be8:	b7 95       	ror	r27
 bea:	f7 95       	ror	r31
 bec:	9e 3f       	cpi	r25, 0xFE	; 254
 bee:	08 f0       	brcs	.+2      	; 0xbf2 <__addsf3x+0x96>
 bf0:	b3 cf       	rjmp	.-154    	; 0xb58 <__addsf3+0x1e>
 bf2:	93 95       	inc	r25
 bf4:	88 0f       	add	r24, r24
 bf6:	08 f0       	brcs	.+2      	; 0xbfa <__addsf3x+0x9e>
 bf8:	99 27       	eor	r25, r25
 bfa:	ee 0f       	add	r30, r30
 bfc:	97 95       	ror	r25
 bfe:	87 95       	ror	r24
 c00:	08 95       	ret

00000c02 <__fixsfsi>:
 c02:	04 d0       	rcall	.+8      	; 0xc0c <__fixunssfsi>
 c04:	68 94       	set
 c06:	b1 11       	cpse	r27, r1
 c08:	b5 c0       	rjmp	.+362    	; 0xd74 <__fp_szero>
 c0a:	08 95       	ret

00000c0c <__fixunssfsi>:
 c0c:	98 d0       	rcall	.+304    	; 0xd3e <__fp_splitA>
 c0e:	88 f0       	brcs	.+34     	; 0xc32 <__fixunssfsi+0x26>
 c10:	9f 57       	subi	r25, 0x7F	; 127
 c12:	90 f0       	brcs	.+36     	; 0xc38 <__fixunssfsi+0x2c>
 c14:	b9 2f       	mov	r27, r25
 c16:	99 27       	eor	r25, r25
 c18:	b7 51       	subi	r27, 0x17	; 23
 c1a:	a0 f0       	brcs	.+40     	; 0xc44 <__fixunssfsi+0x38>
 c1c:	d1 f0       	breq	.+52     	; 0xc52 <__fixunssfsi+0x46>
 c1e:	66 0f       	add	r22, r22
 c20:	77 1f       	adc	r23, r23
 c22:	88 1f       	adc	r24, r24
 c24:	99 1f       	adc	r25, r25
 c26:	1a f0       	brmi	.+6      	; 0xc2e <__fixunssfsi+0x22>
 c28:	ba 95       	dec	r27
 c2a:	c9 f7       	brne	.-14     	; 0xc1e <__fixunssfsi+0x12>
 c2c:	12 c0       	rjmp	.+36     	; 0xc52 <__fixunssfsi+0x46>
 c2e:	b1 30       	cpi	r27, 0x01	; 1
 c30:	81 f0       	breq	.+32     	; 0xc52 <__fixunssfsi+0x46>
 c32:	9f d0       	rcall	.+318    	; 0xd72 <__fp_zero>
 c34:	b1 e0       	ldi	r27, 0x01	; 1
 c36:	08 95       	ret
 c38:	9c c0       	rjmp	.+312    	; 0xd72 <__fp_zero>
 c3a:	67 2f       	mov	r22, r23
 c3c:	78 2f       	mov	r23, r24
 c3e:	88 27       	eor	r24, r24
 c40:	b8 5f       	subi	r27, 0xF8	; 248
 c42:	39 f0       	breq	.+14     	; 0xc52 <__fixunssfsi+0x46>
 c44:	b9 3f       	cpi	r27, 0xF9	; 249
 c46:	cc f3       	brlt	.-14     	; 0xc3a <__fixunssfsi+0x2e>
 c48:	86 95       	lsr	r24
 c4a:	77 95       	ror	r23
 c4c:	67 95       	ror	r22
 c4e:	b3 95       	inc	r27
 c50:	d9 f7       	brne	.-10     	; 0xc48 <__fixunssfsi+0x3c>
 c52:	3e f4       	brtc	.+14     	; 0xc62 <__fixunssfsi+0x56>
 c54:	90 95       	com	r25
 c56:	80 95       	com	r24
 c58:	70 95       	com	r23
 c5a:	61 95       	neg	r22
 c5c:	7f 4f       	sbci	r23, 0xFF	; 255
 c5e:	8f 4f       	sbci	r24, 0xFF	; 255
 c60:	9f 4f       	sbci	r25, 0xFF	; 255
 c62:	08 95       	ret

00000c64 <__floatunsisf>:
 c64:	e8 94       	clt
 c66:	09 c0       	rjmp	.+18     	; 0xc7a <__floatsisf+0x12>

00000c68 <__floatsisf>:
 c68:	97 fb       	bst	r25, 7
 c6a:	3e f4       	brtc	.+14     	; 0xc7a <__floatsisf+0x12>
 c6c:	90 95       	com	r25
 c6e:	80 95       	com	r24
 c70:	70 95       	com	r23
 c72:	61 95       	neg	r22
 c74:	7f 4f       	sbci	r23, 0xFF	; 255
 c76:	8f 4f       	sbci	r24, 0xFF	; 255
 c78:	9f 4f       	sbci	r25, 0xFF	; 255
 c7a:	99 23       	and	r25, r25
 c7c:	a9 f0       	breq	.+42     	; 0xca8 <__floatsisf+0x40>
 c7e:	f9 2f       	mov	r31, r25
 c80:	96 e9       	ldi	r25, 0x96	; 150
 c82:	bb 27       	eor	r27, r27
 c84:	93 95       	inc	r25
 c86:	f6 95       	lsr	r31
 c88:	87 95       	ror	r24
 c8a:	77 95       	ror	r23
 c8c:	67 95       	ror	r22
 c8e:	b7 95       	ror	r27
 c90:	f1 11       	cpse	r31, r1
 c92:	f8 cf       	rjmp	.-16     	; 0xc84 <__floatsisf+0x1c>
 c94:	fa f4       	brpl	.+62     	; 0xcd4 <__floatsisf+0x6c>
 c96:	bb 0f       	add	r27, r27
 c98:	11 f4       	brne	.+4      	; 0xc9e <__floatsisf+0x36>
 c9a:	60 ff       	sbrs	r22, 0
 c9c:	1b c0       	rjmp	.+54     	; 0xcd4 <__floatsisf+0x6c>
 c9e:	6f 5f       	subi	r22, 0xFF	; 255
 ca0:	7f 4f       	sbci	r23, 0xFF	; 255
 ca2:	8f 4f       	sbci	r24, 0xFF	; 255
 ca4:	9f 4f       	sbci	r25, 0xFF	; 255
 ca6:	16 c0       	rjmp	.+44     	; 0xcd4 <__floatsisf+0x6c>
 ca8:	88 23       	and	r24, r24
 caa:	11 f0       	breq	.+4      	; 0xcb0 <__floatsisf+0x48>
 cac:	96 e9       	ldi	r25, 0x96	; 150
 cae:	11 c0       	rjmp	.+34     	; 0xcd2 <__floatsisf+0x6a>
 cb0:	77 23       	and	r23, r23
 cb2:	21 f0       	breq	.+8      	; 0xcbc <__floatsisf+0x54>
 cb4:	9e e8       	ldi	r25, 0x8E	; 142
 cb6:	87 2f       	mov	r24, r23
 cb8:	76 2f       	mov	r23, r22
 cba:	05 c0       	rjmp	.+10     	; 0xcc6 <__floatsisf+0x5e>
 cbc:	66 23       	and	r22, r22
 cbe:	71 f0       	breq	.+28     	; 0xcdc <__floatsisf+0x74>
 cc0:	96 e8       	ldi	r25, 0x86	; 134
 cc2:	86 2f       	mov	r24, r22
 cc4:	70 e0       	ldi	r23, 0x00	; 0
 cc6:	60 e0       	ldi	r22, 0x00	; 0
 cc8:	2a f0       	brmi	.+10     	; 0xcd4 <__floatsisf+0x6c>
 cca:	9a 95       	dec	r25
 ccc:	66 0f       	add	r22, r22
 cce:	77 1f       	adc	r23, r23
 cd0:	88 1f       	adc	r24, r24
 cd2:	da f7       	brpl	.-10     	; 0xcca <__floatsisf+0x62>
 cd4:	88 0f       	add	r24, r24
 cd6:	96 95       	lsr	r25
 cd8:	87 95       	ror	r24
 cda:	97 f9       	bld	r25, 7
 cdc:	08 95       	ret

00000cde <__fp_inf>:
 cde:	97 f9       	bld	r25, 7
 ce0:	9f 67       	ori	r25, 0x7F	; 127
 ce2:	80 e8       	ldi	r24, 0x80	; 128
 ce4:	70 e0       	ldi	r23, 0x00	; 0
 ce6:	60 e0       	ldi	r22, 0x00	; 0
 ce8:	08 95       	ret

00000cea <__fp_nan>:
 cea:	9f ef       	ldi	r25, 0xFF	; 255
 cec:	80 ec       	ldi	r24, 0xC0	; 192
 cee:	08 95       	ret

00000cf0 <__fp_pscA>:
 cf0:	00 24       	eor	r0, r0
 cf2:	0a 94       	dec	r0
 cf4:	16 16       	cp	r1, r22
 cf6:	17 06       	cpc	r1, r23
 cf8:	18 06       	cpc	r1, r24
 cfa:	09 06       	cpc	r0, r25
 cfc:	08 95       	ret

00000cfe <__fp_pscB>:
 cfe:	00 24       	eor	r0, r0
 d00:	0a 94       	dec	r0
 d02:	12 16       	cp	r1, r18
 d04:	13 06       	cpc	r1, r19
 d06:	14 06       	cpc	r1, r20
 d08:	05 06       	cpc	r0, r21
 d0a:	08 95       	ret

00000d0c <__fp_round>:
 d0c:	09 2e       	mov	r0, r25
 d0e:	03 94       	inc	r0
 d10:	00 0c       	add	r0, r0
 d12:	11 f4       	brne	.+4      	; 0xd18 <__fp_round+0xc>
 d14:	88 23       	and	r24, r24
 d16:	52 f0       	brmi	.+20     	; 0xd2c <__fp_round+0x20>
 d18:	bb 0f       	add	r27, r27
 d1a:	40 f4       	brcc	.+16     	; 0xd2c <__fp_round+0x20>
 d1c:	bf 2b       	or	r27, r31
 d1e:	11 f4       	brne	.+4      	; 0xd24 <__fp_round+0x18>
 d20:	60 ff       	sbrs	r22, 0
 d22:	04 c0       	rjmp	.+8      	; 0xd2c <__fp_round+0x20>
 d24:	6f 5f       	subi	r22, 0xFF	; 255
 d26:	7f 4f       	sbci	r23, 0xFF	; 255
 d28:	8f 4f       	sbci	r24, 0xFF	; 255
 d2a:	9f 4f       	sbci	r25, 0xFF	; 255
 d2c:	08 95       	ret

00000d2e <__fp_split3>:
 d2e:	57 fd       	sbrc	r21, 7
 d30:	90 58       	subi	r25, 0x80	; 128
 d32:	44 0f       	add	r20, r20
 d34:	55 1f       	adc	r21, r21
 d36:	59 f0       	breq	.+22     	; 0xd4e <__fp_splitA+0x10>
 d38:	5f 3f       	cpi	r21, 0xFF	; 255
 d3a:	71 f0       	breq	.+28     	; 0xd58 <__fp_splitA+0x1a>
 d3c:	47 95       	ror	r20

00000d3e <__fp_splitA>:
 d3e:	88 0f       	add	r24, r24
 d40:	97 fb       	bst	r25, 7
 d42:	99 1f       	adc	r25, r25
 d44:	61 f0       	breq	.+24     	; 0xd5e <__fp_splitA+0x20>
 d46:	9f 3f       	cpi	r25, 0xFF	; 255
 d48:	79 f0       	breq	.+30     	; 0xd68 <__fp_splitA+0x2a>
 d4a:	87 95       	ror	r24
 d4c:	08 95       	ret
 d4e:	12 16       	cp	r1, r18
 d50:	13 06       	cpc	r1, r19
 d52:	14 06       	cpc	r1, r20
 d54:	55 1f       	adc	r21, r21
 d56:	f2 cf       	rjmp	.-28     	; 0xd3c <__fp_split3+0xe>
 d58:	46 95       	lsr	r20
 d5a:	f1 df       	rcall	.-30     	; 0xd3e <__fp_splitA>
 d5c:	08 c0       	rjmp	.+16     	; 0xd6e <__fp_splitA+0x30>
 d5e:	16 16       	cp	r1, r22
 d60:	17 06       	cpc	r1, r23
 d62:	18 06       	cpc	r1, r24
 d64:	99 1f       	adc	r25, r25
 d66:	f1 cf       	rjmp	.-30     	; 0xd4a <__fp_splitA+0xc>
 d68:	86 95       	lsr	r24
 d6a:	71 05       	cpc	r23, r1
 d6c:	61 05       	cpc	r22, r1
 d6e:	08 94       	sec
 d70:	08 95       	ret

00000d72 <__fp_zero>:
 d72:	e8 94       	clt

00000d74 <__fp_szero>:
 d74:	bb 27       	eor	r27, r27
 d76:	66 27       	eor	r22, r22
 d78:	77 27       	eor	r23, r23
 d7a:	cb 01       	movw	r24, r22
 d7c:	97 f9       	bld	r25, 7
 d7e:	08 95       	ret

00000d80 <__mulsf3>:
 d80:	0b d0       	rcall	.+22     	; 0xd98 <__mulsf3x>
 d82:	c4 cf       	rjmp	.-120    	; 0xd0c <__fp_round>
 d84:	b5 df       	rcall	.-150    	; 0xcf0 <__fp_pscA>
 d86:	28 f0       	brcs	.+10     	; 0xd92 <__mulsf3+0x12>
 d88:	ba df       	rcall	.-140    	; 0xcfe <__fp_pscB>
 d8a:	18 f0       	brcs	.+6      	; 0xd92 <__mulsf3+0x12>
 d8c:	95 23       	and	r25, r21
 d8e:	09 f0       	breq	.+2      	; 0xd92 <__mulsf3+0x12>
 d90:	a6 cf       	rjmp	.-180    	; 0xcde <__fp_inf>
 d92:	ab cf       	rjmp	.-170    	; 0xcea <__fp_nan>
 d94:	11 24       	eor	r1, r1
 d96:	ee cf       	rjmp	.-36     	; 0xd74 <__fp_szero>

00000d98 <__mulsf3x>:
 d98:	ca df       	rcall	.-108    	; 0xd2e <__fp_split3>
 d9a:	a0 f3       	brcs	.-24     	; 0xd84 <__mulsf3+0x4>

00000d9c <__mulsf3_pse>:
 d9c:	95 9f       	mul	r25, r21
 d9e:	d1 f3       	breq	.-12     	; 0xd94 <__mulsf3+0x14>
 da0:	95 0f       	add	r25, r21
 da2:	50 e0       	ldi	r21, 0x00	; 0
 da4:	55 1f       	adc	r21, r21
 da6:	62 9f       	mul	r22, r18
 da8:	f0 01       	movw	r30, r0
 daa:	72 9f       	mul	r23, r18
 dac:	bb 27       	eor	r27, r27
 dae:	f0 0d       	add	r31, r0
 db0:	b1 1d       	adc	r27, r1
 db2:	63 9f       	mul	r22, r19
 db4:	aa 27       	eor	r26, r26
 db6:	f0 0d       	add	r31, r0
 db8:	b1 1d       	adc	r27, r1
 dba:	aa 1f       	adc	r26, r26
 dbc:	64 9f       	mul	r22, r20
 dbe:	66 27       	eor	r22, r22
 dc0:	b0 0d       	add	r27, r0
 dc2:	a1 1d       	adc	r26, r1
 dc4:	66 1f       	adc	r22, r22
 dc6:	82 9f       	mul	r24, r18
 dc8:	22 27       	eor	r18, r18
 dca:	b0 0d       	add	r27, r0
 dcc:	a1 1d       	adc	r26, r1
 dce:	62 1f       	adc	r22, r18
 dd0:	73 9f       	mul	r23, r19
 dd2:	b0 0d       	add	r27, r0
 dd4:	a1 1d       	adc	r26, r1
 dd6:	62 1f       	adc	r22, r18
 dd8:	83 9f       	mul	r24, r19
 dda:	a0 0d       	add	r26, r0
 ddc:	61 1d       	adc	r22, r1
 dde:	22 1f       	adc	r18, r18
 de0:	74 9f       	mul	r23, r20
 de2:	33 27       	eor	r19, r19
 de4:	a0 0d       	add	r26, r0
 de6:	61 1d       	adc	r22, r1
 de8:	23 1f       	adc	r18, r19
 dea:	84 9f       	mul	r24, r20
 dec:	60 0d       	add	r22, r0
 dee:	21 1d       	adc	r18, r1
 df0:	82 2f       	mov	r24, r18
 df2:	76 2f       	mov	r23, r22
 df4:	6a 2f       	mov	r22, r26
 df6:	11 24       	eor	r1, r1
 df8:	9f 57       	subi	r25, 0x7F	; 127
 dfa:	50 40       	sbci	r21, 0x00	; 0
 dfc:	8a f0       	brmi	.+34     	; 0xe20 <__mulsf3_pse+0x84>
 dfe:	e1 f0       	breq	.+56     	; 0xe38 <__mulsf3_pse+0x9c>
 e00:	88 23       	and	r24, r24
 e02:	4a f0       	brmi	.+18     	; 0xe16 <__mulsf3_pse+0x7a>
 e04:	ee 0f       	add	r30, r30
 e06:	ff 1f       	adc	r31, r31
 e08:	bb 1f       	adc	r27, r27
 e0a:	66 1f       	adc	r22, r22
 e0c:	77 1f       	adc	r23, r23
 e0e:	88 1f       	adc	r24, r24
 e10:	91 50       	subi	r25, 0x01	; 1
 e12:	50 40       	sbci	r21, 0x00	; 0
 e14:	a9 f7       	brne	.-22     	; 0xe00 <__mulsf3_pse+0x64>
 e16:	9e 3f       	cpi	r25, 0xFE	; 254
 e18:	51 05       	cpc	r21, r1
 e1a:	70 f0       	brcs	.+28     	; 0xe38 <__mulsf3_pse+0x9c>
 e1c:	60 cf       	rjmp	.-320    	; 0xcde <__fp_inf>
 e1e:	aa cf       	rjmp	.-172    	; 0xd74 <__fp_szero>
 e20:	5f 3f       	cpi	r21, 0xFF	; 255
 e22:	ec f3       	brlt	.-6      	; 0xe1e <__mulsf3_pse+0x82>
 e24:	98 3e       	cpi	r25, 0xE8	; 232
 e26:	dc f3       	brlt	.-10     	; 0xe1e <__mulsf3_pse+0x82>
 e28:	86 95       	lsr	r24
 e2a:	77 95       	ror	r23
 e2c:	67 95       	ror	r22
 e2e:	b7 95       	ror	r27
 e30:	f7 95       	ror	r31
 e32:	e7 95       	ror	r30
 e34:	9f 5f       	subi	r25, 0xFF	; 255
 e36:	c1 f7       	brne	.-16     	; 0xe28 <__mulsf3_pse+0x8c>
 e38:	fe 2b       	or	r31, r30
 e3a:	88 0f       	add	r24, r24
 e3c:	91 1d       	adc	r25, r1
 e3e:	96 95       	lsr	r25
 e40:	87 95       	ror	r24
 e42:	97 f9       	bld	r25, 7
 e44:	08 95       	ret

00000e46 <__udivmodhi4>:
 e46:	aa 1b       	sub	r26, r26
 e48:	bb 1b       	sub	r27, r27
 e4a:	51 e1       	ldi	r21, 0x11	; 17
 e4c:	07 c0       	rjmp	.+14     	; 0xe5c <__udivmodhi4_ep>

00000e4e <__udivmodhi4_loop>:
 e4e:	aa 1f       	adc	r26, r26
 e50:	bb 1f       	adc	r27, r27
 e52:	a6 17       	cp	r26, r22
 e54:	b7 07       	cpc	r27, r23
 e56:	10 f0       	brcs	.+4      	; 0xe5c <__udivmodhi4_ep>
 e58:	a6 1b       	sub	r26, r22
 e5a:	b7 0b       	sbc	r27, r23

00000e5c <__udivmodhi4_ep>:
 e5c:	88 1f       	adc	r24, r24
 e5e:	99 1f       	adc	r25, r25
 e60:	5a 95       	dec	r21
 e62:	a9 f7       	brne	.-22     	; 0xe4e <__udivmodhi4_loop>
 e64:	80 95       	com	r24
 e66:	90 95       	com	r25
 e68:	bc 01       	movw	r22, r24
 e6a:	cd 01       	movw	r24, r26
 e6c:	08 95       	ret

00000e6e <_exit>:
 e6e:	f8 94       	cli

00000e70 <__stop_program>:
 e70:	ff cf       	rjmp	.-2      	; 0xe70 <__stop_program>
